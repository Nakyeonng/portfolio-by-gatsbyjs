/** @type {FromMarkdownExtension} */
export const mdxJsxFromMarkdown: FromMarkdownExtension
/** @type {ToMarkdownExtension} */
export const mdxJsxToMarkdown: ToMarkdownExtension
export type Literal = import('mdast').Literal
export type Parent = import('mdast').Parent
export type FromMarkdownExtension = import('mdast-util-from-markdown').Extension
export type FromMarkdownHandle = import('mdast-util-from-markdown').Handle
export type Token = import('mdast-util-from-markdown').Token
export type ToMarkdownExtension = import('mdast-util-to-markdown').Options
export type ToMarkdownHandle = import('mdast-util-to-markdown').Handle
export type ToMarkdownMap = import('mdast-util-to-markdown').Map
export type Program = import('estree-jsx').Program
export type MDXJsxAttributeValueExpression =
  import('./complex-types').MDXJsxAttributeValueExpression
export type MDXJsxAttribute = import('./complex-types').MDXJsxAttribute
export type MDXJsxExpressionAttribute =
  import('./complex-types').MDXJsxExpressionAttribute
export type MDXJsxFlowElement = import('./complex-types').MDXJsxFlowElement
export type MDXJsxTextElement = import('./complex-types').MDXJsxTextElement
export type Tag = {
  name: string | null
  attributes: (MDXJsxAttribute | MDXJsxExpressionAttribute)[]
  close?: boolean
  selfClosing?: boolean
  start: Token['start']
  end: Token['start']
}
